// This file was generated by the storyblok CLI.
// DO NOT MODIFY THIS FILE BY HAND.
import type { ISbStoryData } from "storyblok";
export interface RichtextStoryblok {
  type: string;
  content?: RichtextStoryblok[];
  marks?: RichtextStoryblok[];
  attrs?: any;
  text?: string;
  [k: string]: any;
}

export interface AccordionStoryblok {
  surface?: number | string;
  container?: "" | "normal" | "breakout";
  align?:
    | ""
    | "text-left mr-atuo justify-items-start"
    | "text-right ml-auto justify-items-end"
    | "text-center mx-auto justify-items-center";
  padding_top?: "" | "pt-0" | "pt-xs" | "pt-sm" | "pt-md" | "pt-lg" | "pt-xl" | "pt-2xl";
  padding_bottom?: "" | "pb-0" | "pb-xs" | "pb-sm" | "pb-md" | "pb-lg" | "pb-xl" | "pb-2xl";
  is_faq?: boolean;
  items?: AccordionItemStoryblok[];
  content?: RichtextStoryblok;
  component: "accordion";
  _uid: string;
  [k: string]: any;
}

export interface AccordionItemStoryblok {
  title: string;
  content: RichtextStoryblok;
  component: "accordion_item";
  _uid: string;
  [k: string]: any;
}

export interface AssetStoryblok {
  alt: string | null;
  copyright?: string | null;
  fieldtype: "asset";
  id: number;
  filename: string | null;
  name: string;
  title: string | null;
  focus: string | null;
  meta_data?: {
    [k: string]: any;
  };
  source?: string | null;
  is_external_url?: boolean;
  is_private?: boolean;
  src?: string;
  updated_at?: string;
  width?: number | null;
  height?: number | null;
  aspect_ratio?: number | null;
  public_id?: string | null;
  content_type?: string;
  [k: string]: any;
}

export interface BannerStoryblok {
  surface?: number | string;
  surface_banner?: number | string;
  align?:
    | ""
    | "text-left mr-auto justify-items-start"
    | "text-right ml-auto justify-items-end"
    | "text-center mx-auto justify-items-center";
  container?: "" | "normal" | "breakout" | "full-width";
  wide?: boolean;
  padding_top?: "" | "pt-0" | "pt-xs" | "pt-sm" | "pt-md" | "pt-lg" | "pt-xl";
  padding_bottom?: "" | "pb-" | "pb-xs" | "pb-sm" | "pb-md" | "pb-lg" | "pb-xl";
  image: AssetStoryblok;
  video?: AssetStoryblok;
  content: RichtextStoryblok;
  opacity?:
    | ""
    | "opacity-10"
    | "opacity-20"
    | "opacity-30"
    | "opacity-40"
    | "opacity-50"
    | "opacity-60"
    | "opacity-70"
    | "opacity-80"
    | "opacity-90";
  links?: LinkStoryblok[];
  component: "banner";
  _uid: string;
  [k: string]: any;
}

export interface BlogAndWorkItemsStoryblok {
  surface?: number | string;
  container?: "" | "normal" | "breakout";
  padding_top?: "" | "pt-0" | "pt-xs" | "pt-sm" | "pt-md" | "pt-lg" | "pt-xl" | "pt-2xl";
  padding_bottom?: "" | "pb-0" | "pb-xs" | "pb-sm" | "pb-md" | "pb-lg" | "pb-xl" | "pb-2xl";
  content?: RichtextStoryblok;
  items?: (ISbStoryData<PostStoryblok> | ISbStoryData<WorkStoryblok> | string)[];
  category?: ISbStoryData<BlogCategoryStoryblok> | ISbStoryData<WorkCategoryStoryblok> | string;
  max_items: string;
  component: "blog_and_work_items";
  _uid: string;
  [k: string]: any;
}

export interface BlogCategoryStoryblok {
  title: string;
  content?: RichtextStoryblok;
  og_title: string;
  og_description: string;
  og_image: AssetStoryblok;
  surface?: number | string;
  component: "blog_category";
  _uid: string;
  [k: string]: any;
}

export interface CardGridStoryblok {
  surface?:  string;
  align?:string;
  container: string;
  padding_top?: string;
  padding_bottom?: string;
  columns_xs?: string;
  columns_sm?: string;
  columns_md?: string;
  columns_lg?: string;
  columns_xl?: string;
  content?: RichtextStoryblok;
  gap_xs?: string;
  items?: ImageCardStoryblok[];
  gap_md?: string;
  gap_xl?: string;
  min_height?: string;
  component: "card_grid";
  _uid: string;
  [k: string]: any;
}

export type MultiassetStoryblok = {
  alt: string | null;
  copyright?: string | null;
  fieldtype: "asset";
  id: number;
  filename: string | null;
  name: string;
  title: string | null;
  focus: string | null;
  meta_data?: {
    [k: string]: any;
  };
  source?: string | null;
  is_external_url?: boolean;
  is_private?: boolean;
  src?: string;
  updated_at?: string;
  width?: number | null;
  height?: number | null;
  aspect_ratio?: number | null;
  public_id?: string | null;
  content_type?: string;
  [k: string]: any;
}[];

export interface CarouselStoryblok {
  overflow_hidden?: boolean;
  container?: "" | "normal" | "breakout" | "full-width";
  surface?: string;
  carousel_surface?: string;
  padding_top?:string;
  padding_bottom?: string;
  min_height?: string;
  loop?: boolean;
  drag_free?: boolean;
  navigation?: boolean;
  arrows_overlay?: boolean;
  autoplay?: "" | "none" | "autoplay" | "autoscroll";
  delay?: string;
  auto_scroll_speed?: string;
  auto_scroll_direction?: "" | "forward" | "backward";
  type?: "" | "images" | "items" | "cards";
  align_slides?: "" | "start" | "center" | "end";
  item_width_xs: string;
  item_width_sm: string;
  item_width_md: string;
  item_width_lg: string;
  item_width_xl?: string;
  gap_xs?: string;
  gap_sm?: string;
  gap_md?: string;
  gap_lg?: string;
  gap_xl?: string;
  aspect_ratio?: string |  number;
  images?: MultiassetStoryblok;
  items?: (ISbStoryData<PostStoryblok> | ISbStoryData<ServiceStoryblok> | ISbStoryData<WorkStoryblok> | string)[];
  cards?: ImageCardStoryblok[];
  component: "carousel";
  _uid: string;
  [k: string]: any;
}

export interface ContactFormStoryblok {
  content?: RichtextStoryblok;
  container?: "" | "breakout" | "normal";
  topic: ISbStoryData<ContactTopicsStoryblok> | string;
  show_topics?: boolean;
  thank_you: string;
  surface?: number | string;
  surface_accent?: number | string;
  padding_top?: "" | "pt-0" | "pt-xs" | "pt-sm" | "pt-md" | "pt-lg" | "pt-xl" | "pt-2xl";
  padding_bottom?: "" | "pb-0" | "pb-xs" | "pb-sm" | "pb-md" | "pb-lg" | "pb-xl" | "pb-2xl";
  component: "contact_form";
  _uid: string;
  [k: string]: any;
}

export interface ContactTopicsStoryblok {
  name: string;
  destination: string;
  component: "contact_topics";
  _uid: string;
  [k: string]: any;
}

export interface FeatureItemStoryblok {
  content: RichtextStoryblok;
  icon?: number | string;
  links?: LinkStoryblok[];
  component: "feature_item";
  _uid: string;
  [k: string]: any;
}

export interface FeaturesStoryblok {
  content?: RichtextStoryblok;
  items?: FeatureItemStoryblok[];
  surface?: number | string;
  accent_surface?: number | string;
  align?:
    | ""
    | "text-left mr-auto justify-items-start"
    | "text-right ml-auto justify-items-end"
    | "text-center mx-auto justify-items-center";
  container?: "" | "normal" | "breakout";
  padding_top?: "" | "pt-0" | "pt-xs" | "pt-sm" | "pt-md" | "pt-lg" | "pt-xl" | "pt-2xl";
  padding_bottom?: "" | "pb-0" | "pb-xs" | "pb-sm" | "pb-md" | "pb-lg" | "pb-xl" | "pb-2xl";
  component: "features";
  _uid: string;
  [k: string]: any;
}

export interface GalleryStoryblok {
  surface?: number | string;
  align?:
    | ""
    | "text-left mr-auto justify-items-start"
    | "text-right ml-auto justify-items-end"
    | "text-center mx-auto justify-items-center";
  container: "" | "normal" | "breakout" | "full-width";
  padding_top?: "" | "pt-0" | "pt-xs" | "pt-sm" | "pt-md" | "pt-lg" | "pt-xl" | "pt-2xl";
  padding_bottom?: "" | "pb-0" | "pb-xs" | "pb-sm" | "pb-md" | "pb-lg" | "pb-xl" | "pb-2xl";
  aspect_ratio?: "" | "1.777" | "1.25" | "1" | "0.8" | "0.5625";
  columns_xs?: "" | "1" | "2" | "3" | "4";
  columns_sm?: "" | "1" | "2" | "3" | "4";
  columns_md?: "" | "1" | "2" | "3" | "4" | "5" | "6";
  columns_lg?: "" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "10";
  columns_xl?: "" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "10" | "11" | "12";
  lightbox?: boolean;
  content?: RichtextStoryblok;
  items?: MultiassetStoryblok;
  component: "gallery";
  _uid: string;
  [k: string]: any;
}

export interface HeroStoryblok {
  surface?: number | string;
  accent_color?:
    | ""
    | "--primary-bg"
    | "--secondary-bg"
    | "--accent-bg"
    | "--dark-bg"
    | "--light-bg"
    | "--success-bg"
    | "--info-bg"
    | "--warning-bg"
    | "--danger-bg";
  bg_opacity?:
    | ""
    | "opacity-10"
    | "opacity-20"
    | "opacity-30"
    | "opacity-40"
    | "opacity-50"
    | "opacity-60"
    | "opacity-70"
    | "opacity-80"
    | "opacity-90"
    | "opacity-100";
  title: string;
  content: RichtextStoryblok;
  links?: LinkStoryblok[];
  thumbnail?: AssetStoryblok;
  video?: AssetStoryblok;
  component: "hero";
  _uid: string;
  [k: string]: any;
}

export interface ImageCardStoryblok {
  image?: AssetStoryblok;
  aspect_ratio?: "" | "1.777" | "1.25" | "1" | "0.8" | "0.5625";
  surface?: number | string;
  template?: "" | "card" | "banner";
  align?: "" | "text-left" | "text-center" | "text-right";
  vertical_align?: "" | "content-start" | "content-center" | "content-end";
  image_opacity?: string;
  content: RichtextStoryblok;
  buttons?: LinkStoryblok[];
  component: "image_card";
  _uid: string;
  [k: string]: any;
}

export type MultilinkStoryblok =
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      anchor?: string;
      rel?: string;
      title?: string;
      prep?: string;
      linktype: "story";
      story?: {
        name: string;
        created_at?: string;
        published_at?: string;
        id: number;
        uuid: string;
        content?: {
          [k: string]: any;
        };
        slug: string;
        full_slug: string;
        sort_by_date?: null | string;
        position?: number;
        tag_list?: string[];
        is_startpage?: boolean;
        parent_id?: null | number;
        meta_data?: null | {
          [k: string]: any;
        };
        group_id?: string;
        first_published_at?: string;
        release_id?: null | number;
        lang?: string;
        path?: null | string;
        alternates?: any[];
        default_full_slug?: null | string;
        translated_slugs?: null | any[];
        [k: string]: any;
      };
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      linktype: "url";
      rel?: string;
      title?: string;
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      email?: string;
      linktype: "email";
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      linktype: "asset";
      [k: string]: any;
    };

export interface LinkStoryblok {
  label: string;
  href: Exclude<MultilinkStoryblok, {linktype?: "asset"}>;
  icon?: number | string;
  surface?: number | string;
  hide_label?: boolean;
  component: "link";
  _uid: string;
  [k: string]: any;
}

export interface NewsletterStoryblok {
  surface?: number | string;
  surface_accent?: number | string;
  container?: "" | "breakout" | "normal";
  padding_top?: "" | "pt-0" | "pt-xs" | "pt-sm" | "pt-md" | "pt-lg" | "pt-xl" | "pt-2xl";
  padding_bottom?: "" | "pb-0" | "pb-xs" | "pb-sm" | "pb-md" | "pb-lg" | "pb-xl" | "pb-2xl";
  align?:
    | ""
    | "text-left mr-auto justify-items-start"
    | "text-center place-items-center"
    | "text-right ml-auto justify-items-end";
  list_id?: string;
  show_name_field?: boolean;
  opt_in?: boolean;
  add_main_list_option?: boolean;
  content?: RichtextStoryblok;
  thank_you: string;
  component: "newsletter";
  _uid: string;
  [k: string]: any;
}

export interface OpeningHourStoryblok {
  day?: "" | "1" | "2" | "3" | "4" | "5" | "6" | "0";
  component: "opening_hour";
  _uid: string;
  [k: string]: any;
}

export interface PageStoryblok {
  body?: (
    | HeroStoryblok
    | MenuItemsStoryblok
    | MenusStoryblok
    | TextMediaStoryblok
    | RichtextStoryblok
    | BannerStoryblok
    | FeaturesStoryblok
    | PricingStoryblok
    | BlogAndWorkItemsStoryblok
    | GalleryStoryblok
    | ServicesStoryblok
    | StackItemsStoryblok
    | ContactFormStoryblok
    | AccordionStoryblok
    | CarouselStoryblok
    | CardGridStoryblok
    | NewsletterStoryblok
  )[];
  og_title: string;
  og_description: string;
  og_image: AssetStoryblok;
  surface?: number | string;
  component: "page";
  _uid: string;
  [k: string]: any;
}

export interface PostStoryblok {
  surface?: number | string;
  surface_accent?: number | string;
  category: (ISbStoryData<BlogCategoryStoryblok> | string)[];
  title: string;
  intro: string;
  content: RichtextStoryblok;
  thumbnail: AssetStoryblok;
  body?: (
    | HeroStoryblok
    | MenuItemsStoryblok
    | MenusStoryblok
    | RichtextStoryblok
    | TextMediaStoryblok
    | BannerStoryblok
    | PricingStoryblok
    | FeaturesStoryblok
    | BlogAndWorkItemsStoryblok
    | GalleryStoryblok
    | ServicesStoryblok
    | StackItemsStoryblok
    | ContactFormStoryblok
    | AccordionStoryblok
    | CarouselStoryblok
    | CardGridStoryblok
    | NewsletterStoryblok
  )[];
  og_title: string;
  og_description: string;
  og_image: AssetStoryblok;
  component: "post";
  _uid: string;
  [k: string]: any;
}

export interface PriceItemStoryblok {
  title?: string;
  icon?: number | string;
  price_prefix?: string;
  price?: string;
  price_suffix?: string;
  content: RichtextStoryblok;
  links?: LinkStoryblok[];
  surface?: number | string;
  accent_surface?: number | string;
  component: "price_item";
  _uid: string;
  [k: string]: any;
}

export interface PricingStoryblok {
  content?: RichtextStoryblok;
  items?: PriceItemStoryblok[];
  surface?: number | string;
  align?:
    | ""
    | "text-left mr-auto justify-items-start"
    | "text-right ml-auto justify-items-end"
    | "text-center mx-auto justify-items-center";
  container?: "" | "normal" | "breakout";
  padding_top?: "" | "pt-0" | "pt-xs" | "pt-sm" | "pt-md" | "pt-lg" | "pt-xl" | "pt-2xl";
  padding_bottom?: "" | "pb-none" | "pb-xs" | "pb-sm" | "pb-md" | "pb-lg" | "pb-xl" | "pb-2xl";
  component: "pricing";
  _uid: string;
  [k: string]: any;
}

export interface RichtextStoryblok {
  surface?: number | string;
  align?:
    | ""
    | "text-left mr-atuo justify-items-start"
    | "text-right ml-auto justify-items-end"
    | "text-center mx-auto justify-items-center";
  container?: "" | "normal" | "breakout";
  padding_top?: "" | "pt-0" | "pt-xs" | "pt-sm" | "pt-md" | "pt-lg" | "pt-xl" | "pt-2xl";
  padding_bottom?: "" | "pb-0" | "pb-xs" | "pb-sm" | "pb-md" | "pb-lg" | "pb-xl" | "pb-2xl";
  content: RichtextStoryblok;
  links?: LinkStoryblok[];
  component: "richtext";
  _uid: string;
  [k: string]: any;
}

export interface ServiceStoryblok {
  title: string;
  page_title?: string;
  intro: string;
  content: RichtextStoryblok;
  thumbnail: AssetStoryblok;
  body?: (
    | HeroStoryblok
    | MenuItemsStoryblok
    | MenusStoryblok
    | RichtextStoryblok
    | TextMediaStoryblok
    | BannerStoryblok
    | PricingStoryblok
    | FeaturesStoryblok
    | BlogAndWorkItemsStoryblok
    | GalleryStoryblok
    | StackItemsStoryblok
    | AccordionStoryblok
    | CardGridStoryblok
    | CarouselStoryblok
    | ContactFormStoryblok
    | NewsletterStoryblok
    | ServicesStoryblok
  )[];
  og_title: string;
  og_description: string;
  og_image: AssetStoryblok;
  surface?: number | string;
  component: "service";
  _uid: string;
  [k: string]: any;
}

export interface ServicesStoryblok {
  surface?: number | string;
  container?: "" | "normal" | "breakout";
  padding_top?: "" | "pt-0" | "pt-xs" | "pt-sm" | "pt-md" | "pt-lg" | "pt-xl" | "pt-2xl";
  padding_bottom?: "" | "pb-0" | "pb-xs" | "pb-sm" | "pb-md" | "pb-lg" | "pb-xl" | "pb-2xl";
  content?: RichtextStoryblok;
  items?: (ISbStoryData<ServiceStoryblok> | string)[];
  max_items: string;
  component: "services";
  _uid: string;
  [k: string]: any;
}

export interface SettingsStoryblok {
  surface_light?: any;
  surface_dark?: any;
  surface_muted?: any;
  surface_primary?: any;
  surface_secondary?: any;
  surface_accent?: any;
  surface_success?: any;
  surface_info?: any;
  surface_warning?: any;
  surface_danger?: any;
  surface_footer?: number | string;
  surface_page?: number | string;
  surface_menu?: number | string;
  contact_form?: ContactFormStoryblok[];
  newsletter?: any;
  newsletter_in_footer?: boolean;
  newsletter_content?: RichtextStoryblok;
  newsletter_thank_you?: string;
  main_menu: LinkStoryblok[];
  footer_text?: RichtextStoryblok;
  footer_menu_1_label: string;
  footer_menu_1?: LinkStoryblok[];
  footer_menu_2_label: string;
  footer_menu_2?: LinkStoryblok[];
  company_name?: string;
  address?: string;
  font_headings?: number | string;
  font_weight_headings?: "" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900";
  font_body?: number | string;
  font_weight_body?: "" | "100" | "200" | "300" | "400" | "500" | "600" | "700" | "800" | "900";
  blog_title: string;
  blog_content?: RichtextStoryblok;
  blog_og_title: string;
  blog_og_description: string;
  blog_og_image: AssetStoryblok;
  email: string;
  phone?: string;
  phone_label?: string;
  whatsapp?: string;
  links?: LinkStoryblok[];
  work_title: string;
  work_content: RichtextStoryblok;
  work_og_title: string;
  work_og_description: string;
  work_og_image: AssetStoryblok;
  tiny_analytics_id?: string;
  radius_media?: string;
  radius_input: string;
  component: "settings";
  _uid: string;
  [k: string]: any;
}

export interface StackStoryblok {
  name?: string;
  logo?: AssetStoryblok;
  intro?: string;
  url?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  component: "stack";
  _uid: string;
  [k: string]: any;
}

export interface StackItemsStoryblok {
  content?: RichtextStoryblok;
  surface?: number | string;
  accent_surface?: number | string;
  align?:
    | ""
    | "text-left mr-auto justify-items-start"
    | "text-right ml-auto justify-items-end"
    | "text-center mx-auto justify-items-center";
  container?: "" | "normal" | "breakout";
  items?: (ISbStoryData<StackStoryblok> | string)[];
  component: "stack_items";
  _uid: string;
  [k: string]: any;
}

export interface TextMediaStoryblok {
  image: AssetStoryblok;
  media_width: "" | "33.33" | "50" | "66.66";
  aspect_ratio?: "" | "1.777" | "1.25" | "1" | "0.8" | "0.5625";
  crop?: boolean;
  layout?: "" | "fill" | "fit";
  video?: AssetStoryblok;
  reverse?: boolean;
  surface?: number | string;
  align?:
    | ""
    | "text-left mr-auto justify-items-start"
    | "text-right ml-auto justify-items-end"
    | "text-center mx-auto justify-items-center";
  container: "" | "normal" | "breakout";
  content: RichtextStoryblok;
  links?: LinkStoryblok[];
  padding_top?: "" | "pt-0" | "pt-xs" | "pt-sm" | "pt-md" | "pt-lg" | "pt-xl" | "pt-2xl";
  padding_bottom?: "" | "pb-0" | "pb-xs" | "pb-sm" | "pb-md" | "pb-lg" | "pb-xl" | "pb-2xl";
  component: "text_media";
  _uid: string;
  [k: string]: any;
}

export interface WorkStoryblok {
  title: string;
  intro: string;
  content: RichtextStoryblok;
  links?: LinkStoryblok[];
  thumbnail: AssetStoryblok;
  category?: (ISbStoryData<WorkCategoryStoryblok> | string)[];
  services?: (ISbStoryData<ServiceStoryblok> | string)[];
  body?: (
    | HeroStoryblok
    | MenuItemsStoryblok
    | MenusStoryblok
    | RichtextStoryblok
    | TextMediaStoryblok
    | BannerStoryblok
    | PricingStoryblok
    | FeaturesStoryblok
    | GalleryStoryblok
    | BlogAndWorkItemsStoryblok
    | ServicesStoryblok
    | StackItemsStoryblok
    | ContactFormStoryblok
    | AccordionStoryblok
    | CardGridStoryblok
    | CarouselStoryblok
    | NewsletterStoryblok
  )[];
  og_title: string;
  og_description: string;
  og_image: AssetStoryblok;
  surface?: number | string;
  component: "work";
  _uid: string;
  [k: string]: any;
}

export interface WorkCategoryStoryblok {
  title: string;
  page_title?: string;
  content?: RichtextStoryblok;
  og_title: string;
  og_description: string;
  og_image: AssetStoryblok;
  surface?: number | string;
  component: "work_category";
  _uid: string;
  [k: string]: any;
}
